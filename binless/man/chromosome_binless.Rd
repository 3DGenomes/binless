% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chromosome.R
\name{chromosome_binless}
\alias{chromosome_binless}
\title{Find optimized parameters and normalize whole chromosome using binless}
\usage{
chromosome_binless(sample, sample2 = NA, zoom_region = "full",
  ncores = 16, base.res = 5000, far.cutoff = 1e+07,
  out_prefix = "chromosome_binless", write.intermediate = F,
  write.logfile = F, max.submatrices = 10, submat.width.factor = 120,
  submat.step.factor = 20, bg.steps = 5, tol_val = 0.2,
  bf_per_kb = 50, bf_per_decade = 10, bins_per_bf = 10,
  ngibbs = 25, iter = 100, init.dispersion = 0.1,
  nrows.dispersion = 100, min.lambda2 = 0.1, fix.lambda1 = F,
  fix.lambda1.at = NA, fix.lambda2 = T, fix.lambda2.at = 2.5,
  nouter = 25, free_decay = 10000)
}
\arguments{
\item{sample}{The path to a CSdata object, stored as RData (see
preprocessing.R), to perform binless signal detection}

\item{sample2}{The path to a second CSdata object, in which case binless
differences will be computed}

\item{zoom_region}{If "full" (default), will normalize complete dataset. If a
vector c(start,end) is passed, will restrict normalization to this portion.}

\item{ncores}{The number of cores to parallelize parameter estimation}

\item{base.res}{The base resolution of the normalization}

\item{far.cutoff}{distance at which we should stop computing signal. Used for
final lambda1 estimation, to lower memory footprint, and to write matrices.
Default is 10e6 (10Mb)}

\item{out_prefix}{how output files will be named. Can include a path}

\item{write.intermediate}{Whether to write fast binless output to disk, in
order to save some memory. Only tested in signal calculations}

\item{write.logfile}{Output of individual optimized_binless calculations will
be written there}

\item{max.submatrices}{Run optimized_binless on that many submatrices, at
most.}

\item{submat.width.factor}{Submatrices will have that many bins (multiply by
base.res to get size). Default is 120}

\item{submat.step.factor}{Submatrices will be extracted every so many bins.
Default is 20}

\item{bg.steps}{The first steps are for fitting the background. Do at most bg.steps.}

\item{tol_val}{double tolerance on the values for convergence and the fused lasso (default 2e-1)}

\item{bf_per_kb}{positive numeric. Number of cubic spline basis functions per
kilobase, for genomic bias estimates. Small values make the optimization 
easy, but makes the genomic biases stiffer.}

\item{bf_per_decade}{positive numeric. Number of cubic spline basis functions
per distance decade (in bases), for diagonal decay. Default parameter 
should suffice.}

\item{bins_per_bf}{positive integer. Number of distance bins to split basis 
functions into. Must be sufficiently small so that the diagonal decay is 
approximately constant in that bin.}

\item{ngibbs}{positive integer. Maximum number of iterations.}

\item{iter}{positive integer. Maximum number of optimization steps for each leg.}

\item{init.dispersion}{positive numeric. Value of the dispersion to use initially.}

\item{nrows.dispersion}{positive integer. Number of rows on which to compute the dispersion.}

\item{min.lambda2}{The minimum value which lambda2 is allowed to take when searching its optimum. Too small values
can cause computational instability.}

\item{fix.lambda1}{whether to set lambda1 to a given value, or to estimate it. Default is estimate.}

\item{fix.lambda1.at}{if fix.lambda1==T, the approximate value where it is meant to be fixed. Might move a bit because
of the positivity and degeneracy constraints. Make sure this value is positive if lambda1 is fixed.}

\item{fix.lambda2}{whether to set lambda2 to a given value, or to estimate it. Default is fixed.}

\item{fix.lambda2.at}{if fix.lambda2==T, the approximate value where it is meant to be fixed. Make sure this value
is positive if lambda2 is fixed.}

\item{nouter}{unsigned The maximum number of iterations that should be performed (default 25)}

\item{free_decay}{integer the distance in bases up to which the decay is not forced to decrease (default 10000)}
}
\value{
Nothing will be returned. Will write the following files, all
  starting with out_prefix. _submatrix_parameters.tsv is a tab-separated file
  containing the normalization parameters of all submatrices. _raw_band.RData
  is the raw data up to far.cutoff, as a sparseMatrix object;
  _binless_band.RData is the binless matrix, up to far.cutoff;
  _log10signal.RData is the binless log10(signal) matrix. When differences
  are computed, an object is created for each of the reference (first
  dataset, _ref in filename) or the target (second dataset, _target in
  filename), and two additional matrices are produced: _log10diff.RData
  contains the unthresholded difference between target and reference, and
  _log10diff_signif.RData uses the threshold provided by the optimization
  procedure. It is however recommended to look at both matrices, since this
  threshold's estimation is not very robust
}
\description{
This procedure combines \code{\link{normalize_binless}} and
\code{\link{fast_binless}} to propose a chromosome-wide normalization of a
dataset, or a difference estimation between two datasets. First, submatrices
are generated along the diagonal, and some heuristics (see paper) are
computed to select the top 10 (by default) which will likely contain a signal
(or a difference). These matrices are subsequently normalized with
normalize_binless, followed by signal (difference) detection. The submatrix
with the smallest lambda2 is used to provide inputs to fast_binless, which
will be computed on the whole dataset.
}
\examples{
" "
}
